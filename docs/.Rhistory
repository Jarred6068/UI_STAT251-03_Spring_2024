geom_histogram(color = 'black', fill = 'navy', position = 'dodge', bins = k)+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: ______________')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
D = ggplot(data = gss, aes(x = Smokecig))+
geom_histogram(color = 'black', fill = 'navy')+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: ______________')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggarrange(A, B, C, D, nrow = 2, ncol = 2)
head(gss)
sum(gss$Vegan)
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4), `Relative Frequency`=rep("", 4))
ggplot()+geom_bar(aes(x = unique(x$epoch), y = cts/sum(cts)), stat = 'identity')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
#xlim(names(cts))+
ylab('Relative Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4), `Relative Frequency`=rep("", 4))
ggplot()+geom_bar(aes(x = names(cts), y = cts/sum(cts)), stat = 'identity')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Relative Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4), `Relative Frequency`=rep("", 4))
ggplot()+geom_bar(aes(x = names(cts), y = cts/sum(cts)), stat = 'identity')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Relative Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = cts, `Relative Frequency`= cts/sum(cts))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
path = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_1/'
path2 = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_2/'
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(Epoch = names(cts), Frequency = rep("",4))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
path = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_1/'
path2 = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_2/'
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = cts)
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Frequency')+
xlab('Epoch')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
path = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_1/'
path2 = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_2/'
gss = read.csv(paste0(path2, 'georgia_student_survey.csv'))
k = ceiling(sqrt(dim(gss)[1]))
A = ggplot(data = gss, aes(x = Gender))+
geom_histogram(color = 'black', fill = 'navy')+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: (a)')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
B = ggplot(data = gss, aes(x = Studytime))+
geom_histogram(color = 'black', fill = 'navy', position = 'dodge', bins = k)+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: (d)')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
C = ggplot(data = gss, aes(x = Height))+
geom_histogram(color = 'black', fill = 'navy', position = 'dodge', bins = k)+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: (b)')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
D = ggplot(data = gss, aes(x = Smokecig))+
geom_histogram(color = 'black', fill = 'navy')+
theme_classic2()+
xlab('')+
ylab('Frequency')+
ggtitle('Variable: (c)')+
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggarrange(A, B, C, D, nrow = 2, ncol = 2)
set.seed(555)
library(HSAUR2)
kable(skulls[sample(1:dim(skulls)[1], 10),], format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = cts)
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Frequency')+
xlab('Epoch')
cts
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')
cts
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
ylab('Frequency')+
xlab('Epoch')
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
path = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_1/'
path2 = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_2/'
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
ylab('Frequency')+
xlab('Epoch')
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Frequency')+
xlab('Epoch')
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')
ggplot()+geom_bar(aes(x = names(cts), y = cts), stat = 'identity',
color = 'black')+
theme_bw()
cts
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
path = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_1/'
path2 = 'C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_2/'
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4))
ggplot()+geom_blank()+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Relative Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4))
ggplot()+geom_blank()+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts)[c(2,3,1,4)])+
ylab('Relative Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
tbl = cbind.data.frame(names(cts), Frequency = rep("",4))
ggplot()+geom_blank()+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
xlim(names(cts))+
ylab('Relative Frequency')+
xlab('Epoch')
names(cts)
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
lbls = names(cts)
ggplot()+geom_bar(aes(x = lbls, y = cts),
stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 0.6), breaks = seq(0, 0.6, 0.1))+
ylab('Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
lbls = names(cts)
ggplot()+geom_bar(aes(x = lbls, y = cts),
stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 5), breaks = seq(0, 5, 1))+
ylab('Frequency')+
xlab('Epoch')
ggplot()+geom_bar(aes(x = lbls, y = cts),
stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 5), breaks = seq(0, 5, 1))+
xlim(lbls)+
ylab('Frequency')+
xlab('Epoch')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = summary(x$epoch)[which(summary(x$epoch)>0)]
lbls = names(cts)
ggplot()+geom_bar(aes(x = lbls, y = cts),
stat = 'identity',
color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 5), breaks = seq(0, 5, 1))+
xlim(lbls)+
ylab('Frequency')+
xlab('Epoch')
cts
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = rep("",4))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 2, color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = rep("",4))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), bins = 4, color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = rep("",4))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 1.75, color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = rep("",4))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 2, color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
?geom_histogram
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = cts)
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 2, color = 'black')+
theme_bw()+
scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
x$nh
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = cts)
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 2, color = 'black')+
theme_bw()+
#scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
#scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
tbl
set.seed(555)
x = skulls[sample(1:dim(skulls)[1], 10),]
cts = c(sum(x$nh<=50), sum(x$nh>50 & x$nh<=52), sum(x$nh>52 & x$nh<=54), sum(x$nh>54))
tbl = cbind.data.frame(Interval = c('$48 < X \\leq 50$','$50< X \\leq 52$', '$52< X \\leq 54$', '$54< X \\leq 56$'), Frequency = cts)
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
ggplot()+geom_histogram(aes(x = x$nh), binwidth = 2, color = 'black', boundary = 0)+
theme_bw()+
#scale_y_continuous(limits = c(0, 4), breaks = seq(0, 4, 1))+
#scale_x_continuous(limits = c(min(x$nh), 56), breaks = seq(min(x$nh), 56, 2))+
ylab('Frequency')+
xlab('Nasal Height')
set.seed(555)
x2 = Orange[sample(c(1:dim(Orange)[1]), 15),]
ix = sort(x2$age, index.return = T)$ix
x2 = x2[ix,]
tbl = cbind.data.frame(`Age (years)` = plyr::round_any(x2$age/365, 0.5), `Circumference (mm)` = x2$circumference)
kable(tbl, format = 'html', digits = 2, row.names = T, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
quantile(x2$age)
quantile(tbl$`Age (years)`)
quantile(tbl$`Age (years)`, type = 2)
set.seed(555)
x2 = Orange[sample(c(1:dim(Orange)[1]), 15),]
x2$age = plyr::round_any(x2$age/365, 0.5)
ggplot()+geom_boxplot(aes(x = x2$age))+
theme_classic2()+
scale_x_continuous(limits = c(min(x2$age), max(x2$age)), breaks = seq(min(x2$age), max(x2$age), 0.5))+
xlab('Orange Tree Age (years)')+
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = unique(magr)
cts = summary(as.factor(magr))
RF = cts/sum(cts)
CRF = cumsum(RF)
which = sample(1:6, 5, replace = T)
cts2 = cts
cts2[which[1]] = ''
RF2 = RF
RF2[which[2:3]] = ''
CRF2 = CRF
CRF2[which[4:5]] = ''
tbl = rbind(cbind.data.frame(Magnitude = xvals, Frequency = cts, `Relative Frequency` = RF, `Cumulative Relative Frequency` = CRF ), c("Total", sum(cts), sum(RF), 1.0))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')%>%
column_spec(4, width = "18em")
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = unique(magr)
cts = summary(as.factor(magr))
RF = cts/sum(cts)
CRF = cumsum(RF)
which = sample(1:6, 5, replace = T)
cts2 = cts
cts2[which[1]] = ''
RF2 = RF
RF2[which[2:3]] = ''
CRF2 = CRF
CRF2[which[4:5]] = ''
tbl = rbind(cbind.data.frame(Magnitude = xvals, Frequency = cts, `Relative Frequency` = RF, `Cumulative Relative Frequency` = CRF ), c("Total", sum(cts), sum(RF), 1.0))
kable(tbl, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')%>%
column_spec(4, width = "18em")
xvals
xvals = sort(unique(magr))
xvals
(xvals*cts)
sum(xvals*cts)/1000
paste(xvals, '')
paste(xvals, '\times', cts, collapse = '+')
paste(xvals, '\times (', RF, collapse = ')+')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = unique(magr)
ggplot()+geom_step(aes(x = xvals, y = summary(as.factor(magr))))+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = unique(magr)
cts = summary(as.factor(magr))
ggplot()+geom_step(aes(x = xvals, y = cumsum(cts/sum(cts))))+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = sort(unique(magr))
cts = summary(as.factor(magr))
ggplot()+geom_step(aes(x = xvals, y = cumsum(cts/sum(cts))))+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = sort(unique(magr))
cts = summary(as.factor(magr))
ggplot()+geom_step(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 1.5)+
geom_point(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 2)+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = sort(unique(magr))
cts = summary(as.factor(magr))
ggplot()+geom_step(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 1)+
geom_point(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 3)+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
set.seed(432)
magr = plyr::round_any(quakes$mag, 0.5)
xvals = sort(unique(magr))
cts = summary(as.factor(magr))
ggplot()+geom_step(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 1)+
geom_point(aes(x = xvals, y = cumsum(cts/sum(cts))), size = 2)+
theme_bw()+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))+
scale_x_continuous(limits = c(min(xvals), max(xvals)), breaks = seq(min(xvals), max(xvals), 0.5))+
ylab('Cumulative Relative Frequency')+
xlab('Earthquake Magnitude')
cumsum(cts/sum(cts))
quantile(magr, 0.7, type = 2)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
