}
hist(d,
col='darkorchid',
xlab="Sample",
main="Histogram of Sample")},
height=300)
}
# server <- function(input, output) {
#   output$distPlot <- renderPlot({
#     hist(rnorm(input$ss),col='darkorchid',xlab="Sample",main="Standard Normally Distributed Sample")},
#     height=300
#   )
# }
# Run the application
shinyApp(ui = ui, server = server)
path = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/shiny_apps/HistoPlot/'
outpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/shiny_apps/HistoPlot/histogram_viewer/'
shinylive::export(appdir = path, destdir = outpath)
httpuv::runStaticServer("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/shiny_apps/HistoPlot/histogram_viewer/")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
table(c(1,2,3))
table(c(1,2,3,3,3,3,))
table(c(1,2,3,3,3,3,4))
rnorm(30)
round(rnorm(30),2)
paste0(round(rnorm(30),2), collapse = ',')
paste0(round(rexp(30),2), collapse = ',')
round(rnorm(10, 2), 1)
round(rnorm(10, 2), 2)
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65))
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65))$bins
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65))$breaks
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65), breaks = c(1,2,3,4))
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65), breaks = c(1,2,3))
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65), breaks = c(2,3,4))
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65), breaks = c(1,2,3,4))
hist(c(2.60, 3.87, 2.60, 1.23, 1.38, 2.79, 1.76, 3.12, 3.18, 3.65))$breaks
sort(c(2.60, 3.87,  2.60,  1.23,  1.38,  2.79,  1.76,  3.12,  3.18,  3.65, 4.89,  3.15,  3.77,  2.89, 4.12))
length(c(2.60, 3.87,  2.60,  1.23,  1.38,  2.79,  1.76,  3.12,  3.18,  3.65, 4.89,  3.15,  3.77,  2.89, 4.12))
x = c(1.23,  1.38,  1.76,  2.60,  2.60,  2.79,  2.89,  3.12,  3.15,  3.18,  3.65,  3.77,  3.87,  4.12,  4.41)
x
hist(x, plot = F)$bins
hist(x, plot = F)$breaks
hist(x, plot = F)$counts
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
Bins = c('$1 < X \leq 1.5$', '$1.5 < X \leq 2$', '$2 < X \leq 2.5$', '$2.5 < X \leq 3$', '$3 < X \leq 3.5$', '$3.5 < X \leq 4$', '$4 < X \leq 4.5$')
Bins = c('$1 < X \\leq 1.5$', '$1.5 < X \\leq 2$', '$2 < X \\leq 2.5$', '$2.5 < X \\leq 3$', '$3 < X \\leq 3.5$', '$3.5 < X \\leq 4$', '$4 < X \\leq 4.5$')
freq = hist(x, breaks = seq(1.5, 4.5, 0.5), plot = F)$counts
Bins = c('$1 < X \\leq 1.5$', '$1.5 < X \\leq 2$', '$2 < X \\leq 2.5$', '$2.5 < X \\leq 3$', '$3 < X \\leq 3.5$', '$3.5 < X \\leq 4$', '$4 < X \\leq 4.5$')
freq = hist(x, breaks = seq(1, 4.5, 0.5), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq)
kable(ft, format = 'html', col.names = c('Bin','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 2, row.names = F, booktabs = T)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
Bins = c('$1 < X \\leq 1.5$', '$1.5 < X \\leq 2$', '$2 < X \\leq 2.5$', '$2.5 < X \\leq 3$', '$3 < X \\leq 3.5$', '$3.5 < X \\leq 4$', '$4 < X \\leq 4.5$')
freq = hist(x, breaks = seq(1, 4.5, 0.5), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq)
kable(ft, format = 'html', col.names = c('Bin','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
Bins = c('$1 < X \\leq 1.5$', '$1.5 < X \\leq 2$', '$2 < X \\leq 2.5$', '$2.5 < X \\leq 3$', '$3 < X \\leq 3.5$', '$3.5 < X \\leq 4$', '$4 < X \\leq 4.5$')
freq = hist(x, breaks = seq(1, 4.5, 0.5), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq, rf, crf)
kable(ft, format = 'html', col.names = c('Bin','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
?faithful
hist(faithful$waiting)
hist(faithful$waiting)$breaks
set.seed(123)
Bins = c('$40 < X \\leq 45$', '$45 < X \\leq 50$', '$50 < X \\leq 55$', '$55 < X \\leq 60$', '$60 < X \\leq 65$', '$65 < X \\leq 70$', '$70 < X \\leq 75$', '$75 < X \\leq 80$', '$80 < X \\leq 85$', '$85 < X \\leq 90$', '$90 < X \\leq 95$', '$95 < X \\leq 100$')
freq = hist(faithful$waiting, breaks = seq(40, 100, 5), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq, rf, crf)
kable(ft, format = 'html', col.names = c('Bin','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
set.seed(123)
Bins = c('$40 < X \\leq 45$', '$45 < X \\leq 50$', '$50 < X \\leq 55$', '$55 < X \\leq 60$', '$60 < X \\leq 65$', '$65 < X \\leq 70$', '$70 < X \\leq 75$', '$75 < X \\leq 80$', '$80 < X \\leq 85$', '$85 < X \\leq 90$', '$90 < X \\leq 95$', '$95 < X \\leq 100$')
freq = hist(faithful$waiting, breaks = seq(40, 100, 5), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq, rf, crf)
kable(ft, format = 'html', col.names = c('Waiting Time','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
kable(head(faithful), format = 'html', col.names = c(), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
dim(faithful)
dffaith = rbind.data.frame(faithful[1:10, ], c("$\\vdots$", "$\\vdots$"))
kable(dffaith, format = 'html', col.names = c(), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
dffaith = rbind.data.frame(faithful[1:10, ], c("$\\vdots$", "$\\vdots$"))
kable(dffaith, format = 'html', col.names = c('Duration (min)', 'Waiting Time (min)'), digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
1/272
set.seed(123)
teen.data = cbind.data.frame(Response = factor(c("Often", "Sometimes", "Rarely", 'Never'),
levels = c('Never', "Rarely", "Sometimes", "Often")),
`Proportion of Teens`= c(0.08,0.24,0.29,0.39))
P1 = ggplot(data = teen.data, aes(x = Response, y = `Proportion of Teens`, fill = Response))+
geom_bar(stat = 'identity', color = 'black', size = 0.8)+
theme_hc()+
scale_y_continuous(breaks = seq(0, 0.5, 0.1))+
coord_flip()
P2 = plot(P1+scale_fill_brewer(palette = 'Reds')+theme(legend.position = 'none')+
theme(axis.text.x = element_text(size = 12))+
theme(axis.text.y = element_text(size = 12, angle = 45))+
theme(axis.title.x = element_text(size = 14))+
theme(axis.title.y = element_text(size = 14))+
ggtitle("Are You Losing Focus In Class By Checking Your Cell Phone?"))
pie1 = ggplot(teen.data, aes(x = "", y = `Proportion of Teens`, fill = Response)) +
geom_col(color = "black") +
geom_text(aes(label = `Proportion of Teens`),
position = position_stack(vjust = 0.5), size = 14) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = 'Reds') +
theme_void()+
theme(legend.text = element_text(size = 12))
ggarrange(P1, P2, nrow = 1)
teen.data2 <- teen.data %>%
mutate(csum = rev(cumsum(rev(`Proportion of Teens`))),
pos = `Proportion of Teens`/2 + lead(csum, 1),
pos = if_else(is.na(pos), `Proportion of Teens`/2, pos))
set.seed(123)
library(ggrepel)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggthemes)
library(ggpubr)
library(ggplot2)
set.seed(123)
library(ggrepel)
teen.data = cbind.data.frame(Response = factor(c("Often", "Sometimes", "Rarely", 'Never'),
levels = c('Never', "Rarely", "Sometimes", "Often")),
`Proportion of Teens`= c(0.08,0.24,0.29,0.39))
P1 = ggplot(data = teen.data, aes(x = Response, y = `Proportion of Teens`, fill = Response))+
geom_bar(stat = 'identity', color = 'black', size = 0.8)+
theme_hc()+
scale_y_continuous(breaks = seq(0, 0.5, 0.1))+
scale_fill_brewer(palette = 'Reds')+
theme(legend.position = 'none')+
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12, angle = 45),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14))+
ggtitle("Are You Losing Focus In Class By Checking Your Cell Phone?")
teen.data2 <- teen.data %>%
mutate(csum = rev(cumsum(rev(`Proportion of Teens`))),
pos = `Proportion of Teens`/2 + lead(csum, 1),
pos = if_else(is.na(pos), `Proportion of Teens`/2, pos))
expand.grid(c(11, 1005), c(0, 0.5, 1), c(T, F))
expand.grid(c(11, 1005), c(0, 0.5, 1), c(T, F), c(1:5))
stem(c(rnorm(10)))
x=c(rnorm(10))
x
stem(c(rnorm(10)))
stem(x)
hist(as.factor(c('cat','cat','cat','dog','dog')))
stem(round(runif(10)))
x = c(1:10000)
y1 = sqrt(x)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(n^(1/3))
y3 = 2*(x^(1/3))
plot(x, y1)
lines(x, y2, col = 'r')
lines(x, y2, col = 'red')
lines(x, y3, col = 'blue')
plot(x, y1, col = 'black', type = 'b')
plot(x, y1, col = 'black', type = 'l')
lines(x, y2, col = 'red')
lines(x, y3, col = 'blue')
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(n^(1/3))
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line()
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line(size = 3)
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line(size = 2)
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line(size = 1.5)+
theme(hc)+
scale_y_continuous(breaks = seq(0, 40, 5), limits = c(0, 40))
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line(size = 1.5)+
theme_classic2()+
scale_y_continuous(breaks = seq(0, 40, 5), limits = c(0, 40))
x = c(1:1000)
y1 = round(sqrt(x))
y2 = round(log2(x))+1
y3 = 2*(x^(1/3))
sz = length(x)
df = cbind.data.frame(`Number of Observations` = rep(x, 3),
Method = c(rep('Square Root Method', sz),
rep('Sturges Rule', sz),
rep('Rices Rule', sz)),
`Number of Bins` = c(y1, y2, y3))
ggplot(data = df, aes(x = `Number of Observations`, y = `Number of Bins`, color = Method, linetype = Method))+
geom_line(size = 1.5)+
theme_hc()+
scale_y_continuous(breaks = seq(0, 40, 5), limits = c(0, 40))
stem(faithful$waiting)
stem(faithful$waiting, width = 1)
stem(faithful$waiting, width = 2)
stem(round(faithful$waiting, 1))
stem(faithful$waiting)
ggplot(data = faithful, aes(x = waiting))+
geom_dotplot(dotsize = 0.7)+
theme_classic()+
ylab("")+
xlab("Waiting Time Until Erapution (Min)")+
theme(axis.text.x = element_text(size = 15), axis.text.y = element_blank(),
axis.title.x = element_text(size = 18), axis.title.y = element_blank(),
panel.background = element_blank(),
axis.ticks.y = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = range(faithful$waiting)/k_srm
w_sturges = range(faithful$waiting)/k_sturges
w_rice = range(faithful$waiting)/k_rice
ggplot(data = faithful, aes(x = faithful$waiting))+
geom_histogram(binwidth = w_srm)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = range(faithful$waiting)/k_srm
w_sturges = range(faithful$waiting)/k_sturges
w_rice = range(faithful$waiting)/k_rice
ggplot(data = faithful)+
geom_histogram(aes(x = faithful$waiting), binwidth = w_srm)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = range(faithful$waiting)/k_srm
w_sturges = range(faithful$waiting)/k_sturges
w_rice = range(faithful$waiting)/k_rice
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm)
str(faithful)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = range(faithful$waiting)/k_srm
w_sturges = range(faithful$waiting)/k_sturges
w_rice = range(faithful$waiting)/k_rice
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = range(faithful$waiting)/k_srm
w_sturges = range(faithful$waiting)/k_sturges
w_rice = range(faithful$waiting)/k_rice
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, color = 'black')
?geom_histogram
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, color = 'black')
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, color = 'black')+
theme_classic()
plot(A)
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 10, color = 'black')+
theme_classic()
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 10, color = 'black')+
theme_classic()
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 8, color = 'black')+
theme_classic()
ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black')+
theme_classic()
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black', fill = 'lightblue2')+
theme_classic()
B = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, fill = 'lightblue2')+
theme_classic()
C = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_sturges, fill = 'lightblue2')+
theme_classic()
D = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_rice, fill = 'lightblue2')+
theme_classic()
ggarrange(A, B, C, D, labels = c(A, B, C, D), nrow = 1, ncol = 4)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle('Using $\\k =5$ bins')
B = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Square Root Method')
C = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_sturges, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Stuges Rule')
D = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_rice, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Rices Rule')
ggarrange(A, B, C, D, labels = c('A', 'B', 'C', 'D'), nrow = 1, ncol = 4)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle(TeX('Using $\\k =5$ bins'))
library(latex2exp)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle(TeX('Using $\\k =5$ bins'))
B = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Square Root Method')
C = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_sturges, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Stuges Rule')
D = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_rice, fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Rices Rule')
ggarrange(A, B, C, D, labels = c('A', 'B', 'C', 'D'), nrow = 1, ncol = 4)
library(latex2exp)
n = dim(faithful)[1]
k_srm = round(sqrt(n))
k_sturges = round(log2(n))+1
k_rice = 2*(n^(1/3))
w_srm = (max(faithful$waiting) - min(faithful$waiting))/k_srm
w_sturges = (max(faithful$waiting) - min(faithful$waiting))/k_sturges
w_rice = (max(faithful$waiting) - min(faithful$waiting))/k_rice
A = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(bins = 5, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle(TeX('Using $\\k =5$ bins'))
B = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_srm, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Square Root Method')
C = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_sturges, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Stuges Rule')
D = ggplot(data = faithful, aes(x = waiting))+
geom_histogram(binwidth = w_rice, color = 'black', fill = 'lightblue2')+
theme_classic()+
ggtitle('Using Rices Rule')
ggarrange(A, B, C, D, nrow = 2, ncol = 2)
len(seq(40, 100, 5))
length(seq(40, 100, 5))
median(seq(40, 100, 5))
seq(40, 100, 30)
set.seed(123)
Bins = c('$40 < X \\leq 70$', '$70 < X \\leq 100$')
freq = hist(faithful$waiting, breaks = seq(40, 100, 30), plot = F)$counts
rf = freq/sum(freq)
crf = cumsum(rf)
ft = cbind.data.frame(Bins, freq, rf, crf)
kable(ft, format = 'html', col.names = c('Waiting Time','Frequency', 'Relative Frequency', 'Cumulative Relative Frequency'), digits = 3, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
seq(40, 100, 20)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
168/24
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
paste(round(rnorm(100),1), collapse = ',')
paste(sample(c('cat','dog','fish','lizard'), 100, replace = T), collapse = ',')
paste(sample(c('cat','dog','fish','lizard'), 100, replace = T, prob = c(0.6, 0.3, 0.08, 0.02)), collapse = ',')
