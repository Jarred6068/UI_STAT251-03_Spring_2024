#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
B = ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\bar{x}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Mean')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
#anim_save(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/CLT_mean.gif'))
ggarrange(A, B, nrow = 1, ncol = 2)
ggarrange(A, B, nrow = 1, ncol = 2)
plot(A)
plit(B)
pl0t(B)
plot(B)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
library(gganimate)
path = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
data.final
df.list
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save(paste0('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif'))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
library(gganimate)
path = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save(paste0('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif'))
#Sampling Distribution of the Mean
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
#sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=sample(c(1:6), n[j], replace = TRUE)
props[i]=mean(X)
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =6)
data.final = do.call('rbind.data.frame', df.list)
#xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
#yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\bar{x}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Mean')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/CLT_mean.gif')
#ggarrange(A, B, nrow = 1, ncol = 2)
5.4-8.3
1.1/sqrt(50)
-2.9/0.15
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
library(gganimate)
path = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
# #Sampling Distribution of the Mean
# n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
# resamples = 10000
# p = 0.5
# #sample.size = 100
# df.list = list()
# for(j in 1:length(n)){
#   props = NULL
#   for(i in 1:resamples){
#     X=sample(c(1:6), n[j], replace = TRUE)
#
#     props[i]=mean(X)
#   }
#   df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
#   df.list[[j]] = df
# }
#
# options(repr.plot.width = 5, repr.plot.height =6)
# data.final = do.call('rbind.data.frame', df.list)
# #xn = sort(rnorm(10000, n[j]*p, sqrt(n[j]*p*(1-p))))
# #yn = dnorm(xn, mean = n[j]*p, sqrt(n[j]*p*(1-p)))
#
# #df = cbind.data.frame(ix = c(1:length(props)), props = props)
# #jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
# ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#                                                          #bins = ceiling(sqrt(n[j])),
#                                                          #bins = 15,
#                                                          binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
#                                                          color = 'black',
#                                                          fill = 'lightblue')+
#   geom_density()+
#   theme_hc()+
#   xlab(TeX("$\\bar{x}"))+
#   ylab("Probability Density")+
#   theme(axis.text = element_text(size = 12),
#         axis.title = element_text(size = 14))+
#   ggtitle('Sampling Distribution of the Mean')+
#   labs(subtitle = 'n =  {closest_state}')+
#   transition_states(sample.size, state_length = 3, transition_length = 3)
# # jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# # plot(A)
# # dev.off()
# anim_save('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/CLT_mean.gif')
if (knitr:::is_latex_output()) {
knitr::asis_output('\\url{....}')
} else {
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/CLT_mean.gif")
}
#ggarrange(A, B, nrow = 1, ncol = 2)
#ggarrange(A, B, nrow = 1, ncol = 2)
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/CLT_mean.gif")
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif")
?anim_save()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(ggplot2)
library(ggthemes)
library(ggpubr)
library(latex2exp)
library(gganimate)
path = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 5, repr.plot.height =8)
data.final = do.call('rbind.data.frame', df.list)
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save(paste0('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif'))
#Sampling Distribution of the Proportion
n=c(2, 3, 5, 8, 10,20,40, 80, 100, 200)
resamples = 10000
p = 0.5
sample.size = 100
df.list = list()
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
for(j in 1:length(n)){
props = NULL
for(i in 1:resamples){
X=rbinom(n[j], 1, prob = p)
props[i]=sum(X/n[j])
}
df = cbind.data.frame(sample.size = rep(n[j], resamples), props = props)
df.list[[j]] = df
}
options(repr.plot.width = 10, repr.plot.height =5)
options(repr.plot.width = 10, repr.plot.height =5)
data.final = do.call('rbind.data.frame', df.list)
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.ticks = element_text(size = 12),
title = element_text(size = 16))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save(paste0('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif'))
data.final = do.call('rbind.data.frame', df.list)
#df = cbind.data.frame(ix = c(1:length(props)), props = props)
#jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",i,".jpg"))
ggplot(data = data.final, aes(x = props))+geom_histogram(aes(y = ..density..),
#bins = ceiling(sqrt(n[j])),
#bins = 15,
binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)),
color = 'black',
fill = 'lightblue')+
geom_density()+
theme_hc()+
xlab(TeX("$\\hat{p}"))+
ylab("Probability Density")+
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.ticks = element_text(size = 12),
title = element_text(size = 16))+
ggtitle('Sampling Distribution of the Proportion')+
labs(subtitle = 'n =  {closest_state}')+
transition_states(sample.size, state_length = 3, transition_length = 3)
# jpeg(paste0('C:/Users/Bruin/Desktop/GS Academia/TA/Teaching STAT 251/FALL/Week_5/CLTpics/',"SS_",n[j],".jpg"))
# plot(A)
# dev.off()
anim_save(paste0('C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif'))
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/CLT.gif")
