}
change.type = apply(cbind.data.frame(before.perm, after.perm), 1, classify.change.types)
mod.change[idx.mod.change] = xx
mod.change2 = mod.change
mod.change2[which(mod.change != "No Change")] = "Model Changed"
counts = summary(as.factor(xx))
nm = strsplit(names(counts), ' --> ')
chty = unlist(lapply(nm, classify.change.types))
mod.change.counts = cbind.data.frame(counts, `type of model change` = names(counts),
`Category of Change` = chty)
# ct = summary(as.factor(change.type))
# mod.change.types = cbind.data.frame(count = ct, `category of change` = names(ct))
#combine all permutation pvalues into a matrix
pvalues.mat = cbind.data.frame(pb12.with.perm = unlist(perm.all[8,]),
pb12.no.perm = unlist(no.perm[8,]),
pb22.with.perm = unlist(perm.all[10,]),
pb22.no.perm = unlist(no.perm[10,]),
Allele.freq = unlist(perm.all[13,]),
`Types of Model Changes` = as.factor(mod.change),
Inference = as.factor(mod.change2))
pvalues.mat$diff.perm.p = abs(pvalues.mat$pb12.with.perm - pvalues.mat$pb22.with.perm)
h=0.01
A=ggplot(data = pvalues.mat)+
geom_point(aes(x=log10(pb12.no.perm), y=log10(pb12.with.perm), color=Inference))+
color_palette(palette = "jco")+
theme_hc()+
theme(legend.position = "right")+
labs(y = TeX('$\\log_{10}$ pvalue $\\beta_{12}$ with permutation'),
x = TeX('$\\log_{10}$ pvalue $\\beta_{12}$ without permutation'))+
scale_x_continuous(limits = c(-15,0))+
scale_y_continuous(limits = c(-15,0))+
geom_abline(intercept = 0, slope = 1, linetype="dotted")+
geom_vline(xintercept = log10(h), color="red", linetype="dashed")+
geom_hline(yintercept = log10(h), color="red", linetype="dashed")
h=0.01
B=ggplot(data = pvalues.mat)+
geom_point(aes(x=log10(pb22.no.perm), y=log10(pb22.with.perm), color=Inference))+
color_palette(palette = "jco")+
theme_hc()+
theme(legend.position = "right")+
labs(y = TeX('$\\log_{10}$ pvalue $\\beta_{22}$ with permutation'),
x = TeX('$\\log_{10}$ pvalue $\\beta_{22}$ without permutation'))+
scale_x_continuous(limits = c(-15,0))+
scale_y_continuous(limits = c(-15,0))+
geom_abline(intercept = 0, slope = 1, linetype="dotted")+
geom_vline(xintercept = log10(h), color="red", linetype="dashed")+
geom_hline(yintercept = log10(h), color="red", linetype="dashed")
#pdf("/mnt/ceph/jarredk/MRGN_extra/GTEx_tissues_analysis/Manuscript_results/Perm_check_plot.pdf")
C = ggarrange(A, B, labels = c("A", "B"), nrow = 1, ncol = 2, common.legend = T, legend = "top")
plot(C)
n = dim(pvalues.mat)[1]
pvals.longform = cbind.data.frame(`Permutation Test` = c(rep("b12", n), rep("b22", n)),
pvalue = c(pvalues.mat$pb12.with.perm, pvalues.mat$pb22.with.perm),
`Allele Frequency` = rep(pvalues.mat$Allele.freq, 2),
`Inferred Model Status` = rep(pvalues.mat$Inference, 2))
D=ggplot(data = pvals.longform, aes(x=`Inferred Model Status`, y=`Allele Frequency`))+
xlab("")+
ylab(TeX('Minor Allele Frequency'))+
theme(legend.position = "bottom")+
stat_compare_means(method = "t.test", label.x = 1.3, label.y = 0.47, color = 'red')+
stat_compare_means(label.x = 1.3, label.y = 0.42, color = 'red')+
#scale_y_continuous(limits = c(0, 0.6))+
theme_hc()+
#scale_fill_discrete(labels=c(TeX("$\\H_0: \ \\beta_{12} = 0$"), TeX("$\\H_0: \ \\beta_{22} = 0$")))+
geom_boxplot(fill = "#7AA6DCFF")
plot(D)
color.codes = c("#0073C2FF","#868686FF")
E = ggplot(data = mod.change.counts, aes(x = `type of model change`, y = counts, fill = `Category of Change`))+
theme_hc()+
scale_fill_manual(values = color.codes)+
scale_color_manual(values = color.codes)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_bar(stat = "identity", color = "black")+
theme(legend.position = 'top', legend.title=element_text(size=9), legend.text=element_text(size=8))+
xlab("Type of Model Change After Permutation")+
ylab("Count")
#geom_bar(aes(x = `category of change`, y = count), data = mod.change.types, stat = "identity", fill = c("red", "blue"))
plot(E)
final.plot = ggarrange(C, ggarrange(E, D, labels = c("C", "D"), nrow = 1, ncol = 2), nrow = 2, ncol = 1)
pdf("C:/Users/Bruin/Documents/GitHub/MRGN_extra/Manuscript/SuppFigures/SF3_GTEx_Permutation_and_Model_Changes.pdf",
height = 10, width = 12)
plot(final.plot)
dev.off()
jpeg("C:/Users/Bruin/Documents/GitHub/MRGN_extra/Manuscript/SuppFigures/SF3_GTEx_Permutation_and_Model_Changes.jpeg",
height = 10, width = 12, units = 'in', res = 1200, quality = 90)
plot(final.plot)
dev.off()
0.3*0.167
0.0501*6
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=10, fig.pos = "H")
#knitr::opts_chunk$set(list(echo = FALSE, eval = FALSE))
library(kableExtra)
library(knitr)
library(latex2exp)
library(gridExtra)
library(ggpubr)
library(ggthemes)
library(plyr)
mainpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
wmpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/watermelon/simulated datasets/ wawamelon/WaterMelonMaster.csv'
whiskpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/Whiskers/SimSealData/whiskerMaster.csv'
datapath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#<span style="color: red;"></span>
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'venn1.png')
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'venn1.png')
cwd()
getwd()
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png')
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
#venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#             filename = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png')
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=10, fig.pos = "H")
#knitr::opts_chunk$set(list(echo = FALSE, eval = FALSE))
library(kableExtra)
library(knitr)
library(latex2exp)
library(gridExtra)
library(ggpubr)
library(ggthemes)
library(plyr)
mainpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
wmpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/watermelon/simulated datasets/ wawamelon/WaterMelonMaster.csv'
whiskpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/Whiskers/SimSealData/whiskerMaster.csv'
datapath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#<span style="color: red;"></span>
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png')
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.jpeg')
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.png")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
library(plyr)
library(VennDiagram)
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/venn1.jpeg')
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/my_ven_diagram.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=10, fig.pos = "H")
#knitr::opts_chunk$set(list(echo = FALSE, eval = FALSE))
library(kableExtra)
library(knitr)
library(latex2exp)
library(gridExtra)
library(ggpubr)
library(ggthemes)
library(plyr)
mainpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
wmpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/watermelon/simulated datasets/ wawamelon/WaterMelonMaster.csv'
whiskpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/Whiskers/SimSealData/whiskerMaster.csv'
datapath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#<span style="color: red;"></span>
library(plyr)
library(VennDiagram)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=10, fig.pos = "H")
#knitr::opts_chunk$set(list(echo = FALSE, eval = FALSE))
library(kableExtra)
library(knitr)
library(latex2exp)
library(gridExtra)
library(ggpubr)
library(ggthemes)
library(plyr)
mainpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
wmpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/watermelon/simulated datasets/ wawamelon/WaterMelonMaster.csv'
whiskpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/Whiskers/SimSealData/whiskerMaster.csv'
datapath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#<span style="color: red;"></span>
library(plyr)
library(VennDiagram)
?venn.diagram
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = tempfile(
pattern = 'Venn_4set_pretty',
fileext = '.png'
))
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = tempfile(
pattern = 'Venn_4set_pretty',
fileext = '.png'
))
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = tempfile(
pattern = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty',
fileext = '.png'
))
dataset2 = MASS::birthwt
dataset2$age
install.packages("ggVennDiagram")
install.packages("ggvenn")
venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
filename = 'myvenn.png',
OUTPUT = T)
library(VennDiagram)
# Generate 3 sets of 200 words
set1 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set2 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
set3 <- paste(rep("word_" , 200) , sample(c(1:1000) , 200 , replace=F) , sep="")
# Prepare a palette of 3 colors with R colorbrewer:
library(RColorBrewer)
myCol <- brewer.pal(3, "Pastel2")
# Chart
venn.diagram(
x = list(set1, set2, set3),
category.names = c("Set 1" , "Set 2 " , "Set 3"),
filename = '#14_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
)
library(ggvenn)
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
)
x1
x1
union(x1, x2)
intersect(x1, x2)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 3
)
ggvenn(
list(x1, x2),
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 2
)
?ggvenn
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:15))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:5, 10:20))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=10, fig.pos = "H")
#knitr::opts_chunk$set(list(echo = FALSE, eval = FALSE))
library(kableExtra)
library(knitr)
library(latex2exp)
library(gridExtra)
library(ggpubr)
library(ggthemes)
library(plyr)
mainpath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
wmpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/watermelon/simulated datasets/ wawamelon/WaterMelonMaster.csv'
whiskpath = 'C:/Users/Bruin/Desktop/GS Academia/MS_Stat/SEM 2/STAT 519/PROJ 1/Whiskers/SimSealData/whiskerMaster.csv'
datapath = 'C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/Data/'
#<span style="color: red;"></span>
library(plyr)
#library(VennDiagram)
library(ggvenn)
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:5, 10:20),
Neither = c(1:8, 10:20, 22:24))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 6
)
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:5, 10:20),
Neither = c(1:8, 10:20, 22:23))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 6
)
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:5, 10:20))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 6
)
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/")
x1 = c(paste(rep('bs', 5), 1:5), paste(rep('b', 8), 1:8))
x2 = c(paste(rep('bs', 5), 1:5), paste(rep('s', 15),1:15))
# venn.diagram(x = list(x1, x2), category.names = c("Band", "Sports"),
#              filename = 'myvenn.png',
#              OUTPUT = T)
class = list(Band = c(1:8),
Sport = c(1:5, 10:20))
ggvenn(
class,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 8,
text_size = 6
)
#knitr::include_graphics("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/misc/Venn_4set_pretty.png")
8+15
8+15-5
(4*13)/(52*52)
1/52
9*4
9*4+13
9*4
5+4+7
(4*7)/(16*16)
7/64
0.1*0.2*0.7
2^6
x = expand.grid(`Die 1` = c(1:6), `Die 2` = c(1:6))
x
x = expand.grid(`Die 1` = c(1:4), `Die 2` = c(1:4))
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
df = cbind.data.frame(x, colMeans(x))
kable(df, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
df = cbind.data.frame(x, rowMeans(x))
kable(df, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
xlabels = apply(x, 1, paste0, collapse = '')
xlab()
xlabels
```{r, echo=F, message=F, warning=F}
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
xlabs = apply(x, 1, paste0, collapse = ',')
xlabs
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
xlabs
count(as.factor(xlabs))
summary(as.factor(xlabs))
0.25*0.25
1/16
df = cbind.data.frame(unq.means, 0.25^summary(as.factor(rowMeans(x))))
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
unq.means = unique(rowMeans(x))
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
df = cbind.data.frame(unq.means, 0.25^summary(as.factor(rowMeans(x))))
kable(df, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
unq.means = unique(rowMeans(x))
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
df = cbind.data.frame(unq.means, 0.25^2*summary(as.factor(rowMeans(x))))
kable(df, format = 'html', digits = 2, row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
sum(0.25^2*summary(as.factor(rowMeans(x))))
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
unq.means = unique(rowMeans(x))
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
df = cbind.data.frame(unq.means, 0.25^2*summary(as.factor(rowMeans(x))))
kable(df, format = 'html', digits = 2, col.names = c('$\\bar{X}$', '$P(\\bar{X})$'), row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
unq.means = unique(rowMeans(x))
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
df = cbind.data.frame(unq.means, paste0('$',summary(as.factor(rowMeans(x))), '(0.25^2)$'),0.25^2*summary(as.factor(rowMeans(x))))
kable(df, format = 'html', digits = 2, col.names = c('$\\bar{X}$', '$P(\\bar{X})$'), row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
paste0('$',summary(as.factor(rowMeans(x))), '(0.25^2)$')
df = cbind.data.frame(unq.means, paste0('$',summary(as.factor(rowMeans(x))), '(0.25^2)$', '=', 0.25^2*summary(as.factor(rowMeans(x)))))
df
df = cbind.data.frame(unq.means, paste0('$',summary(as.factor(rowMeans(x))), '(0.25^2)', '=', 0.25^2*summary(as.factor(rowMeans(x))), '$'))
kable(df, format = 'html', digits = 2, col.names = c('$\\bar{X}$', '$P(\\bar{X})$'), row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
df
x = expand.grid(`Observation 1` = c(1:4), `Observation 2` = c(1:4))
unq.means = unique(rowMeans(x))
xlabs = apply(x, 1, function(x) paste0("(", paste(x, collapse = ","), ")",collapse = ''))
df = cbind.data.frame(unq.means, paste0('$',summary(as.factor(rowMeans(x))), '(0.25^2)', '=', 0.25^2*summary(as.factor(rowMeans(x))), '$'))
kable(df, format = 'html', digits = 2, col.names = c('$\\bar{X}$', '$P(\\bar{X})$'), row.names = F, booktabs = T, escape = F)%>%
kable_classic(full_width = F, html_font = "Cambria")%>%kable_styling(bootstrap_options = 'striped')
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
