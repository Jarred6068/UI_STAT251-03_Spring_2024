#working on at the time.
setwd("C:/Users/Bruin/Documents/GitHub/UI_STAT251-03_Spring_2024/docs/")
#render your sweet site.
rmarkdown::render_site()
10548/2
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
head(tab)
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
colnames(tab)
ggplot(data = tab, aes(x = net_type, y = Modularity_top))+
geom_boxplot()
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
ggplot(data = tab, aes(x = net_type, y = Modularity_top))+
geom_boxplot()
head(tab)
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
ggplot(data = tab, aes(x = Network_type, y = Modularity_top))+
geom_boxplot()
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
ggplot(data = tab, aes(x = Network_type, y = Modularity_top, fill = Resolution_top))+
geom_boxplot()
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
ggplot(data = tab, aes(x = Network_type, y = Modularity_top, fill = as.factor(Resolution_top)))+
geom_boxplot()
head(tab)
ggplot(data = tab, aes(x = True_mod_top, y = Modularity_top))+geom_point()
subtab = subset(tab, Resolution_top == 1)
ggplot(data = subtab, aes(x = True_mod_top, y = Modularity_top))+geom_point()
ggplot(data = subtab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()+
facet_wrap(~Gamma)
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()+
facet_wrap(~Gamma)
summary(as.factor(tab$Resolution_top))
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = as.factor(Resolution_top)))+
geom_boxplot()+
facet_wrap(~Gamma)
tab$Resolution_top = as.factor(tab$Resolution_top)
tab$Resolution_middle = as.factor(tab$Resolution_middle)
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
tab$Resolution_top = as.factor(tab$Resolution_top)
tab$Resolution_middle = as.factor(tab$Resolution_middle)
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = as.factor(Resolution_top)))+
geom_boxplot()+
facet_wrap(~Gamma)
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
tab$Resolution_top = as.factor(tab$Resolution_top)
tab$Resolution_middle = as.factor(tab$Resolution_middle)
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()+
facet_wrap(~Gamma)
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_top))+
geom_boxplot()+
facet_wrap(~Gamma)
ggplot(data = tab, aes(x = Network_type, y = Top_homogeneity, fill = Resolution_middle))+
geom_boxplot()+
facet_wrap(~Gamma)
head(tab)
longform = cbind.data.frame(metric = c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1])),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI))
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI))
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI))
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+geom_point()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
theme_classic2()
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
network = as.factor(rep(tab$Network_type, 3)),
input_graph = as.factor(rep(tab$input_graph, 3)),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI))
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~input_graph)
subset(tab, input_graph == 'A_corr_no_cutoff')
summary(subset(tab, input_graph == 'A_corr_no_cutoff')$Top_homogeneity)
summary(subset(tab, input_graph == 'A_corr_no_cutoff')$Top_homogeneity)
summary(subset(tab, input_graph == 'A_corr_no_cutoff')$Top_completeness)
summary(subset(tab, input_graph == 'A_corr_no_cutoff')$Top_NMI)
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~input_graph)+
theme_classic2()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
network = as.factor(rep(tab$Network_type, 3)),
input_graph = as.factor(rep(tab$input_graph, 3)),
gamma = as.factor(rep(tab$Gamma, 3)),
resolution_top = as.factor(rep(tab$Resolution_top, 3)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 3)),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI))
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~input_graph)+
theme(legend.position = 'top')+
theme_classic2()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme(legend.position = 'top')+
theme_classic2()
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')+
summary(subset(tab, input_graph == 'A_corr_no_cutoff')$Top_homogeneity)
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~input_graph)+
theme_hc()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = Top.stats, y = Mid.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Top.stats, color = metric))+
geom_point()+
geom_smooth(method = 'lm')+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Top.stats, color = metric))+
geom_boxplot()+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Top.stats, fill = metric))+
geom_boxplot()+
xlab('Peformance Top Layer')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Mid.stats, color = metric))+
geom_boxplot()+
xlab('Weight Applied to Reconstruction Loss')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Mid.stats, fill = metric))+
geom_boxplot()+
xlab('Weight Applied to Reconstruction Loss')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Top.stats, fill = metric))+
geom_boxplot()+
xlab('Weight Applied to Reconstruction Loss')+
ylab('Performance Top Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = gamma, y = Mid.stats, fill = metric))+
geom_boxplot()+
xlab('Weight Applied to Reconstruction Loss')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
#plotted over resolution parameter
ggplot(data = longform, aes(x = resolution_top, y = Top.stats, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Performance Top Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = resolution_middle, y = Mid.stats, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
library(ggubr)
tab = read.csv('C:/Users/Bruin/Documents/GitHub/HGRN_repo/Simulated Hierarchies/MASTER_results.csv')
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
network = as.factor(rep(tab$Network_type, 3)),
input_graph = as.factor(rep(tab$input_graph, 3)),
gamma = as.factor(rep(tab$Gamma, 3)),
resolution_top = as.factor(rep(tab$Resolution_top, 3)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 3)),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI),
Louvain.top = c(tab$Louvain_homogenity_top,
tab$Louvain_completeness_top,
tab$Louvain_NMI_top),
Louvain.middle = c(tab$Louvain_homogenity_middle,
tab$Louvain_completeness_middle,
tab$Louvain_NMI_middle))
#Louvain Perfomance
ggplot(data = longform, aes(x = input_graph, y = Louvain.top, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Top Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.ticks.x = geom_text(rot = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.ticks.x = geom_text(rotate = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.ticks.x = element_text(rotate = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.ticks.x = element_text(rot = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top')
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.ticks.x = element_text(angle = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
ggplot(data = longform, aes(x = input_graph, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Resolution Value')+
ylab('Louvain Performance Middle Layer')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
longform2 = rbind.data.frame(method = c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1])),
longform[, 1:8],
longform[, c(1:6, 9:10)])
longform2 = rbind(method = c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1])),
longform[, 1:8],
longform[, c(1:6, 9:10)])
?rbind
longform2 = rbind(method = c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1])),
rbind(longform[, 1:6],longform[, 1:6]))
longform2 = rbind(method = c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1])),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
ggplot(data = longform, aes(x = method, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
ggplot(data = longform2, aes(x = method, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
longform2 = rbind(method = c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1])),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
longform2 = rbind(method = as.factor(c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1]))),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
ggplot(data = longform2, aes(x = method, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
longform2 = rbind.data.frame(method = as.factor(c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1]))),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
ggplot(data = longform2, aes(x = method, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
rlang::last_trace()
longform = cbind.data.frame(metric = as.factor(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1]))),
network = as.factor(rep(tab$Network_type, 3)),
input_graph = as.factor(rep(tab$input_graph, 3)),
gamma = as.factor(rep(tab$Gamma, 3)),
resolution_top = as.factor(rep(tab$Resolution_top, 3)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 3)),
Top.stats = c(tab$Top_homogeneity, tab$Top_completeness, tab$Top_NMI),
Mid.stats = c(tab$Middle_homogeneity, tab$Middle_Completeness, tab$Middle_NMI),
Louvain.top = c(tab$Louvain_homogenity_top,
tab$Louvain_completeness_top,
tab$Louvain_NMI_top),
Louvain.middle = c(tab$Louvain_homogenity_middle,
tab$Louvain_completeness_middle,
tab$Louvain_NMI_middle))
longform2 = rbind.data.frame(method = as.factor(c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1]))),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
head(longform)
head(longform2)
longform2 = cbind.data.frame(method = as.factor(c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1]))),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
ggplot(data = longform2, aes(x = method, y = Louvain.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
ggplot(data = longform2, aes(x = method, y = stats.top, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
longform2 = cbind.data.frame(method = as.factor(c(rep('HCD', dim(longform)[1]),
rep('Louvain', dim(longform)[1]))),
metric = as.factor(rep(c(rep('homogeneity', dim(tab)[1]),
rep('completeness', dim(tab)[1]),
rep('NMI', dim(tab)[1])), 2)),
network = as.factor(rep(tab$Network_type, 6)),
input_graph = as.factor(rep(tab$input_graph, 6)),
gamma = as.factor(rep(tab$Gamma, 6)),
resolution_top = as.factor(rep(tab$Resolution_top, 6)),
resolution_middle = as.factor(rep(tab$Resolution_middle, 6)),
stats.top = c(longform$Top.stats, longform$Louvain.top),
stats.mid = c(longform$Mid.stats, longform$Louvain.top))
ggplot(data = longform2, aes(x = method, y = stats.top, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
ggplot(data = longform2, aes(x = method, y = stats.middle, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Middle Layer Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
ggplot(data = longform2, aes(x = method, y = stats.mid, fill = metric))+
geom_boxplot()+
xlab('Method')+
ylab('Middle Layer Performance')+
facet_wrap(~network)+
theme_classic2()+
theme(legend.position = 'top', axis.text.x = element_text(angle = 90))
longform3 = cbind.data.frame(method = as.factor(c(rep('HCD_middle', dim(tab)[1]),
rep('HCD_top', dim(tab)[1]),
rep('Louvain', dim(tab)[1]))),
predicted = c(tab$Comms_predicted_middle,
tab$Comms_predicted_top,
tab$Louvain_predicted))
ggplot(data = longform3, aes(x = method, y = predicted))
ggplot(data = longform3, aes(x = method, y = predicted))+geom_boxplot()
